// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using communitybuilderapi.Data;

namespace communitybuilderapi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220404184137_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("communitybuilderapi.DataModel.address", b =>
                {
                    b.Property<int>("id_address")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address1")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("address2")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("address3")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("city")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("country")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int>("created_by_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deactivate_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deactivated_by_id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("inactive")
                        .HasColumnType("bit");

                    b.Property<string>("internal_comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("invisible")
                        .HasColumnType("bit");

                    b.Property<DateTime>("make_active_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("postalcode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("state")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("telephone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_address");

                    b.ToTable("address");
                });

            modelBuilder.Entity("communitybuilderapi.DataModel.business", b =>
                {
                    b.Property<int>("id_business")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("created_by_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deactivate_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deactivated_by_id")
                        .HasColumnType("int");

                    b.Property<Guid>("guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("inactive")
                        .HasColumnType("bit");

                    b.Property<string>("internal_comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("invisible")
                        .HasColumnType("bit");

                    b.Property<int>("language_default")
                        .HasColumnType("int");

                    b.Property<decimal>("latitude")
                        .HasColumnType("decimal(8,6)");

                    b.Property<int?>("locally_owned")
                        .HasColumnType("int");

                    b.Property<decimal>("longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<DateTime>("make_active_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("our_story")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("search_terms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("short_description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("tagline")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("type")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("id_business");

                    b.ToTable("business");
                });

            modelBuilder.Entity("communitybuilderapi.DataModel.business_address", b =>
                {
                    b.Property<int>("id_business_address")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("created_by_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deactivate_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deactivated_by_id")
                        .HasColumnType("int");

                    b.Property<int>("id_address")
                        .HasColumnType("int");

                    b.Property<int>("id_business")
                        .HasColumnType("int");

                    b.Property<bool>("inactive")
                        .HasColumnType("bit");

                    b.Property<string>("internal_comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("invisible")
                        .HasColumnType("bit");

                    b.Property<bool>("is_administrative")
                        .HasColumnType("bit");

                    b.Property<bool>("is_billing")
                        .HasColumnType("bit");

                    b.Property<bool>("is_physical")
                        .HasColumnType("bit");

                    b.Property<DateTime>("make_active_datetime")
                        .HasColumnType("datetime2");

                    b.HasKey("id_business_address");

                    b.HasIndex("id_address");

                    b.HasIndex("id_business");

                    b.ToTable("business_addresses");
                });

            modelBuilder.Entity("communitybuilderapi.DataModel.business_person", b =>
                {
                    b.Property<int>("id_business_person")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_business")
                        .HasColumnType("int");

                    b.Property<int>("id_person")
                        .HasColumnType("int");

                    b.Property<string>("internal_comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_administrative")
                        .HasColumnType("bit");

                    b.Property<bool>("is_contact")
                        .HasColumnType("bit");

                    b.Property<bool>("is_owner")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_business_person");

                    b.ToTable("business_person");
                });

            modelBuilder.Entity("communitybuilderapi.DataModel.person", b =>
                {
                    b.Property<int>("id_person")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("asp_net_user_Id")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("created_by_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deactivate_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deactivated_by_id")
                        .HasColumnType("int");

                    b.Property<string>("first_name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("inactive")
                        .HasColumnType("bit");

                    b.Property<string>("internal_comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("invisible")
                        .HasColumnType("bit");

                    b.Property<int>("language_default")
                        .HasColumnType("int");

                    b.Property<string>("last_name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("make_active_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("prefix")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_person");

                    b.ToTable("person");
                });

            modelBuilder.Entity("communitybuilderapi.DataModel.person_address", b =>
                {
                    b.Property<int>("id_person_address")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_address")
                        .HasColumnType("int");

                    b.Property<int>("id_person")
                        .HasColumnType("int");

                    b.Property<string>("internal_comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_administrative")
                        .HasColumnType("bit");

                    b.Property<bool>("is_billing")
                        .HasColumnType("bit");

                    b.Property<bool>("is_physical")
                        .HasColumnType("bit");

                    b.HasKey("id_person_address");

                    b.ToTable("person_address");
                });

            modelBuilder.Entity("communitybuilderapi.DataModel.site", b =>
                {
                    b.Property<int>("id_site")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("created_by_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deactivate_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deactivated_by_id")
                        .HasColumnType("int");

                    b.Property<string>("facebook_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("inactive")
                        .HasColumnType("bit");

                    b.Property<string>("instagram_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("internal_comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("invisible")
                        .HasColumnType("bit");

                    b.Property<bool>("is_master_site")
                        .HasColumnType("bit");

                    b.Property<int>("language_default")
                        .HasColumnType("int");

                    b.Property<DateTime>("make_active_datetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("parent_id")
                        .HasColumnType("bit");

                    b.Property<string>("short_description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("twitter_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("youtube_url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_site");

                    b.ToTable("site");
                });

            modelBuilder.Entity("communitybuilderapi.DataModel.site_address", b =>
                {
                    b.Property<int>("id_site_address")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("created_by_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deactivate_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deactivated_by_id")
                        .HasColumnType("int");

                    b.Property<int>("id_address")
                        .HasColumnType("int");

                    b.Property<int>("id_site")
                        .HasColumnType("int");

                    b.Property<bool>("inactive")
                        .HasColumnType("bit");

                    b.Property<string>("internal_comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("invisible")
                        .HasColumnType("bit");

                    b.Property<bool>("is_administrative")
                        .HasColumnType("bit");

                    b.Property<bool>("is_billing")
                        .HasColumnType("bit");

                    b.Property<bool>("is_physical")
                        .HasColumnType("bit");

                    b.Property<DateTime>("make_active_datetime")
                        .HasColumnType("datetime2");

                    b.HasKey("id_site_address");

                    b.ToTable("site_address");
                });

            modelBuilder.Entity("communitybuilderapi.DataModel.site_business", b =>
                {
                    b.Property<int>("id_site_business")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("created_by_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_datetime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deactivate_datetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deactivated_by_id")
                        .HasColumnType("int");

                    b.Property<int>("id_business")
                        .HasColumnType("int");

                    b.Property<int>("id_site")
                        .HasColumnType("int");

                    b.Property<bool>("inactive")
                        .HasColumnType("bit");

                    b.Property<string>("internal_comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("invisible")
                        .HasColumnType("bit");

                    b.Property<DateTime>("make_active_datetime")
                        .HasColumnType("datetime2");

                    b.HasKey("id_site_business");

                    b.ToTable("site_business");
                });

            modelBuilder.Entity("communitybuilderapi.DataModel.video", b =>
                {
                    b.Property<int>("videoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("videoId");

                    b.ToTable("video");
                });

            modelBuilder.Entity("communitybuilderapi.DataModel.business_address", b =>
                {
                    b.HasOne("communitybuilderapi.DataModel.address", "address")
                        .WithMany("business_addresses")
                        .HasForeignKey("id_address")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("communitybuilderapi.DataModel.business", "business")
                        .WithMany("business_addresses")
                        .HasForeignKey("id_business")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("address");

                    b.Navigation("business");
                });

            modelBuilder.Entity("communitybuilderapi.DataModel.address", b =>
                {
                    b.Navigation("business_addresses");
                });

            modelBuilder.Entity("communitybuilderapi.DataModel.business", b =>
                {
                    b.Navigation("business_addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
